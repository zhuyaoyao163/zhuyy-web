<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhuyy.demo.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.zhuyy.demo.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="pass_word" property="passWord" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="dept_id" property="deptId" jdbcType="VARCHAR" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="married" property="married" jdbcType="INTEGER" />
    <result column="salary" property="salary" jdbcType="VARCHAR" />
    <result column="educational" property="educational" jdbcType="VARCHAR" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="email" property="email" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, login_name, pass_word, name, age, birthday, dept_id, position, gender, married, 
    salary, educational, country, city, remarks, school, createtime, email
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectUserForLogin" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from t_user
    where login_name = #{loginName,jdbcType=INTEGER} AND pass_word = #{passWord,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhuyy.demo.model.User" >
    insert into t_user (id, login_name, pass_word, 
      name, age, birthday, 
      dept_id, position, gender, 
      married, salary, educational, 
      country, city, remarks, 
      school, createtime, email
      )
    values (#{id,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, #{passWord,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{birthday,jdbcType=TIMESTAMP}, 
      #{deptId,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{married,jdbcType=INTEGER}, #{salary,jdbcType=VARCHAR}, #{educational,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, 
      #{school,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhuyy.demo.model.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="passWord != null" >
        pass_word,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="married != null" >
        married,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="educational != null" >
        educational,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="email != null" >
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null" >
        #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="married != null" >
        #{married,jdbcType=INTEGER},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=VARCHAR},
      </if>
      <if test="educational != null" >
        #{educational,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhuyy.demo.model.User" >
    update t_user
    <set >
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null" >
        pass_word = #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="married != null" >
        married = #{married,jdbcType=INTEGER},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=VARCHAR},
      </if>
      <if test="educational != null" >
        educational = #{educational,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhuyy.demo.model.User" >
    update t_user
    set login_name = #{loginName,jdbcType=VARCHAR},
      pass_word = #{passWord,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      dept_id = #{deptId,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      married = #{married,jdbcType=INTEGER},
      salary = #{salary,jdbcType=VARCHAR},
      educational = #{educational,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>