<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.1.xsd">
    
    <!-- 读取资源文件 -->
    <bean id="propertyConfigurerMq" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<value>classpath*:conf/jms.properties</value>
		</property>
	</bean>
    
    <!-- 配置connectionFactory -->
    <bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
        <property name="connectionFactory">
        	<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL" value = "${activemq.brokerURL}"/>
            </bean>
        </property>
        <property name="maxConnections" value="100"></property>
    </bean>

	<!-- 消息转换器 -->
    <bean id = "objectMessageConverter" class = "com.zhuyy.demo.util.activemq.util.ObjectMessageConverter"/>

    <!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref = "jmsFactory"/>
        <!-- 区别它采用的模式为false是p2p为true是订阅 -->
        <!--<property name="pubSubDomain" value="false" />-->
        <property name="receiveTimeout" value="600"/>
        <!-- 消息转换器 -->
    	<property name="messageConverter" ref="objectMessageConverter"/>
    </bean>

	<!-- 配置消息目标 -->
	<bean id="demoQueue" class="org.apache.activemq.command.ActiveMQQueue">
    	<constructor-arg value = "demo_queue"/>
	</bean>

	<!-- 配置topic消息目标-->
	<bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value = "topic_destination"/>
	</bean>

	<!-- 配置topic消息生产者 -->
    <bean id="topicMqSender" class="com.zhuyy.demo.util.activemq.util.TopicMqSender">
		<property name="jmsTemplate" ref="jmsTemplate"></property>
		<property name="destination" ref="topicDestination"></property>
    </bean>


	<!-- 配置消息生产者 -->
	<bean id="demoMqSender" class="com.zhuyy.demo.util.activemq.util.DemoMqSender">
		<property name="jmsTemplate" ref="jmsTemplate"></property>
		<property name="destination" ref="demoQueue"></property>
	</bean>

	<!-- 配置topic消息消费者 -->
	<bean id="demoMqReceiver" class="com.zhuyy.demo.util.activemq.util.DemoMqReceiver">
		<property name="jmsTemplate" ref="jmsTemplate"></property>
		<property name="destination" ref="topicDestination"></property>
	</bean>

	<!-- 异步接收消息处理类 -->
	<bean id="queueMessageListener" class="com.zhuyy.demo.util.activemq.util.QueueMessageListener">
		<property name="messageConverter" ref="objectMessageConverter"></property>
	</bean>

	<!-- 消息消费者 一般使用spring的MDP异步接收Queue模式 -->
	<!-- 消息监听容器 -->
	<bean id="queueContainer"
		  class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jmsFactory"></property>
		<property name="destination" ref="demoQueue"></property>
		<property name="messageListener" ref="queueMessageListener"></property>
	</bean>

    <!-- 消息监听适配器 -->
 	<bean id="topicListenerAdapter" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
 	    <property name="delegate">
 	    	<bean class="com.zhuyy.demo.util.activemq.util.ConsumerListener"/>
 	    </property>
 	    <property name="defaultListenerMethod" value="receiveMessage"/>
 	    <property name="messageConverter" ref="objectMessageConverter"/>
 	</bean>

	<!-- 消息监听容器 -->
	<bean id="topicContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jmsFactory"></property>
		<property name="destination" ref="topicDestination"></property>
		<property name="messageListener" ref="topicListenerAdapter"></property>
	</bean>
	
</beans>